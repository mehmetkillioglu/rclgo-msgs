/*
This file is part of rclgo

Copyright Â© 2021 Technology Innovation Institute, United Arab Emirates

Licensed under the Apache License, Version 2.0 (the "License");
	http://www.apache.org/licenses/LICENSE-2.0
*/

/*
THIS FILE IS AUTOGENERATED BY 'rclgo-gen generate'
*/

package gazebo_msgs_msg
import (
	"unsafe"

	"github.com/tiiuae/rclgo/pkg/rclgo/types"
	"github.com/tiiuae/rclgo/pkg/rclgo/typemap"
	
)
/*
#cgo LDFLAGS: -L/opt/ros/galactic/lib -Wl,-rpath=/opt/ros/galactic/lib -lrcl -lrosidl_runtime_c -lrosidl_typesupport_c -lrcutils -lrmw_implementation
#cgo LDFLAGS: -lgazebo_msgs__rosidl_typesupport_c -lgazebo_msgs__rosidl_generator_c

#cgo CFLAGS: -I/opt/ros/galactic/include

#include <rosidl_runtime_c/message_type_support_struct.h>

#include <gazebo_msgs/msg/ode_physics.h>

*/
import "C"

func init() {
	typemap.RegisterMessage("gazebo_msgs/ODEPhysics", ODEPhysicsTypeSupport)
}

// Do not create instances of this type directly. Always use NewODEPhysics
// function instead.
type ODEPhysics struct {
	AutoDisableBodies bool `yaml:"auto_disable_bodies"`// enable auto disabling of bodies, default false
	SorPgsPreconIters uint32 `yaml:"sor_pgs_precon_iters"`// preconditioning inner iterations when uisng projected Gauss Seidel
	SorPgsIters uint32 `yaml:"sor_pgs_iters"`// inner iterations when uisng projected Gauss Seidel
	SorPgsW float64 `yaml:"sor_pgs_w"`// relaxation parameter when using projected Gauss Seidel, 1 = no relaxation
	SorPgsRmsErrorTol float64 `yaml:"sor_pgs_rms_error_tol"`// rms error tolerance before stopping inner iterations
	ContactSurfaceLayer float64 `yaml:"contact_surface_layer"`// contact "dead-band" width
	ContactMaxCorrectingVel float64 `yaml:"contact_max_correcting_vel"`// contact maximum correction velocity
	Cfm float64 `yaml:"cfm"`// global constraint force mixing
	Erp float64 `yaml:"erp"`// global error reduction parameter
	MaxContacts uint32 `yaml:"max_contacts"`// maximum contact joints between two geoms
}

// NewODEPhysics creates a new ODEPhysics with default values.
func NewODEPhysics() *ODEPhysics {
	self := ODEPhysics{}
	self.SetDefaults()
	return &self
}

func (t *ODEPhysics) Clone() *ODEPhysics {
	c := &ODEPhysics{}
	c.AutoDisableBodies = t.AutoDisableBodies
	c.SorPgsPreconIters = t.SorPgsPreconIters
	c.SorPgsIters = t.SorPgsIters
	c.SorPgsW = t.SorPgsW
	c.SorPgsRmsErrorTol = t.SorPgsRmsErrorTol
	c.ContactSurfaceLayer = t.ContactSurfaceLayer
	c.ContactMaxCorrectingVel = t.ContactMaxCorrectingVel
	c.Cfm = t.Cfm
	c.Erp = t.Erp
	c.MaxContacts = t.MaxContacts
	return c
}

func (t *ODEPhysics) CloneMsg() types.Message {
	return t.Clone()
}

func (t *ODEPhysics) SetDefaults() {
	t.AutoDisableBodies = false
	t.SorPgsPreconIters = 0
	t.SorPgsIters = 0
	t.SorPgsW = 0
	t.SorPgsRmsErrorTol = 0
	t.ContactSurfaceLayer = 0
	t.ContactMaxCorrectingVel = 0
	t.Cfm = 0
	t.Erp = 0
	t.MaxContacts = 0
}

// CloneODEPhysicsSlice clones src to dst by calling Clone for each element in
// src. Panics if len(dst) < len(src).
func CloneODEPhysicsSlice(dst, src []ODEPhysics) {
	for i := range src {
		dst[i] = *src[i].Clone()
	}
}

// Modifying this variable is undefined behavior.
var ODEPhysicsTypeSupport types.MessageTypeSupport = _ODEPhysicsTypeSupport{}

type _ODEPhysicsTypeSupport struct{}

func (t _ODEPhysicsTypeSupport) New() types.Message {
	return NewODEPhysics()
}

func (t _ODEPhysicsTypeSupport) PrepareMemory() unsafe.Pointer { //returns *C.gazebo_msgs__msg__ODEPhysics
	return (unsafe.Pointer)(C.gazebo_msgs__msg__ODEPhysics__create())
}

func (t _ODEPhysicsTypeSupport) ReleaseMemory(pointer_to_free unsafe.Pointer) {
	C.gazebo_msgs__msg__ODEPhysics__destroy((*C.gazebo_msgs__msg__ODEPhysics)(pointer_to_free))
}

func (t _ODEPhysicsTypeSupport) AsCStruct(dst unsafe.Pointer, msg types.Message) {
	m := msg.(*ODEPhysics)
	mem := (*C.gazebo_msgs__msg__ODEPhysics)(dst)
	mem.auto_disable_bodies = C.bool(m.AutoDisableBodies)
	mem.sor_pgs_precon_iters = C.uint32_t(m.SorPgsPreconIters)
	mem.sor_pgs_iters = C.uint32_t(m.SorPgsIters)
	mem.sor_pgs_w = C.double(m.SorPgsW)
	mem.sor_pgs_rms_error_tol = C.double(m.SorPgsRmsErrorTol)
	mem.contact_surface_layer = C.double(m.ContactSurfaceLayer)
	mem.contact_max_correcting_vel = C.double(m.ContactMaxCorrectingVel)
	mem.cfm = C.double(m.Cfm)
	mem.erp = C.double(m.Erp)
	mem.max_contacts = C.uint32_t(m.MaxContacts)
}

func (t _ODEPhysicsTypeSupport) AsGoStruct(msg types.Message, ros2_message_buffer unsafe.Pointer) {
	m := msg.(*ODEPhysics)
	mem := (*C.gazebo_msgs__msg__ODEPhysics)(ros2_message_buffer)
	m.AutoDisableBodies = bool(mem.auto_disable_bodies)
	m.SorPgsPreconIters = uint32(mem.sor_pgs_precon_iters)
	m.SorPgsIters = uint32(mem.sor_pgs_iters)
	m.SorPgsW = float64(mem.sor_pgs_w)
	m.SorPgsRmsErrorTol = float64(mem.sor_pgs_rms_error_tol)
	m.ContactSurfaceLayer = float64(mem.contact_surface_layer)
	m.ContactMaxCorrectingVel = float64(mem.contact_max_correcting_vel)
	m.Cfm = float64(mem.cfm)
	m.Erp = float64(mem.erp)
	m.MaxContacts = uint32(mem.max_contacts)
}

func (t _ODEPhysicsTypeSupport) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_message_type_support_handle__gazebo_msgs__msg__ODEPhysics())
}

type CODEPhysics = C.gazebo_msgs__msg__ODEPhysics
type CODEPhysics__Sequence = C.gazebo_msgs__msg__ODEPhysics__Sequence

func ODEPhysics__Sequence_to_Go(goSlice *[]ODEPhysics, cSlice CODEPhysics__Sequence) {
	if cSlice.size == 0 {
		return
	}
	*goSlice = make([]ODEPhysics, int64(cSlice.size))
	for i := 0; i < int(cSlice.size); i++ {
		cIdx := (*C.gazebo_msgs__msg__ODEPhysics__Sequence)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_gazebo_msgs__msg__ODEPhysics * uintptr(i)),
		))
		ODEPhysicsTypeSupport.AsGoStruct(&(*goSlice)[i], unsafe.Pointer(cIdx))
	}
}
func ODEPhysics__Sequence_to_C(cSlice *CODEPhysics__Sequence, goSlice []ODEPhysics) {
	if len(goSlice) == 0 {
		return
	}
	cSlice.data = (*C.gazebo_msgs__msg__ODEPhysics)(C.malloc((C.size_t)(C.sizeof_struct_gazebo_msgs__msg__ODEPhysics * uintptr(len(goSlice)))))
	cSlice.capacity = C.size_t(len(goSlice))
	cSlice.size = cSlice.capacity

	for i, v := range goSlice {
		cIdx := (*C.gazebo_msgs__msg__ODEPhysics)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_gazebo_msgs__msg__ODEPhysics * uintptr(i)),
		))
		ODEPhysicsTypeSupport.AsCStruct(unsafe.Pointer(cIdx), &v)
	}
}
func ODEPhysics__Array_to_Go(goSlice []ODEPhysics, cSlice []CODEPhysics) {
	for i := 0; i < len(cSlice); i++ {
		ODEPhysicsTypeSupport.AsGoStruct(&goSlice[i], unsafe.Pointer(&cSlice[i]))
	}
}
func ODEPhysics__Array_to_C(cSlice []CODEPhysics, goSlice []ODEPhysics) {
	for i := 0; i < len(goSlice); i++ {
		ODEPhysicsTypeSupport.AsCStruct(unsafe.Pointer(&cSlice[i]), &goSlice[i])
	}
}
