/*
This file is part of rclgo

Copyright Â© 2021 Technology Innovation Institute, United Arab Emirates

Licensed under the Apache License, Version 2.0 (the "License");
	http://www.apache.org/licenses/LICENSE-2.0
*/

/*
THIS FILE IS AUTOGENERATED BY 'rclgo-gen generate'
*/

package gazebo_msgs_srv
import (
	"unsafe"

	"github.com/tiiuae/rclgo/pkg/rclgo/types"
	"github.com/tiiuae/rclgo/pkg/rclgo/typemap"
	geometry_msgs_msg "github.com/tiiuae/rclgo-msgs/geometry_msgs/msg"
	primitives "github.com/tiiuae/rclgo/pkg/rclgo/primitives"
	
)
/*
#cgo LDFLAGS: -L/opt/ros/galactic/lib -Wl,-rpath=/opt/ros/galactic/lib -lrcl -lrosidl_runtime_c -lrosidl_typesupport_c -lrcutils -lrmw_implementation
#cgo LDFLAGS: -lgazebo_msgs__rosidl_typesupport_c -lgazebo_msgs__rosidl_generator_c
#cgo LDFLAGS: -lgeometry_msgs__rosidl_typesupport_c -lgeometry_msgs__rosidl_generator_c

#cgo CFLAGS: -I/opt/ros/galactic/include

#include <rosidl_runtime_c/message_type_support_struct.h>

#include <gazebo_msgs/srv/set_link_properties.h>

*/
import "C"

func init() {
	typemap.RegisterMessage("gazebo_msgs/SetLinkProperties_Request", SetLinkProperties_RequestTypeSupport)
}

// Do not create instances of this type directly. Always use NewSetLinkProperties_Request
// function instead.
type SetLinkProperties_Request struct {
	LinkName string `yaml:"link_name"`// name of link
	Com geometry_msgs_msg.Pose `yaml:"com"`// center of mass location in link frame. link names are prefixed by model name, e.g. pr2::base_link
	GravityMode bool `yaml:"gravity_mode"`// set gravity mode on/off. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
	Mass float64 `yaml:"mass"`// linear mass of link. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
	Ixx float64 `yaml:"ixx"`// moment of inertia. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
	Ixy float64 `yaml:"ixy"`// moment of inertia. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
	Ixz float64 `yaml:"ixz"`// moment of inertia. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
	Iyy float64 `yaml:"iyy"`// moment of inertia. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
	Iyz float64 `yaml:"iyz"`// moment of inertia. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
	Izz float64 `yaml:"izz"`// moment of inertia. link names are prefixed by model name, e.g. pr2::base_linkand orientation of the moment of inertiasrelative to the link frame
}

// NewSetLinkProperties_Request creates a new SetLinkProperties_Request with default values.
func NewSetLinkProperties_Request() *SetLinkProperties_Request {
	self := SetLinkProperties_Request{}
	self.SetDefaults()
	return &self
}

func (t *SetLinkProperties_Request) Clone() *SetLinkProperties_Request {
	c := &SetLinkProperties_Request{}
	c.LinkName = t.LinkName
	c.Com = *t.Com.Clone()
	c.GravityMode = t.GravityMode
	c.Mass = t.Mass
	c.Ixx = t.Ixx
	c.Ixy = t.Ixy
	c.Ixz = t.Ixz
	c.Iyy = t.Iyy
	c.Iyz = t.Iyz
	c.Izz = t.Izz
	return c
}

func (t *SetLinkProperties_Request) CloneMsg() types.Message {
	return t.Clone()
}

func (t *SetLinkProperties_Request) SetDefaults() {
	t.LinkName = ""
	t.Com.SetDefaults()
	t.GravityMode = false
	t.Mass = 0
	t.Ixx = 0
	t.Ixy = 0
	t.Ixz = 0
	t.Iyy = 0
	t.Iyz = 0
	t.Izz = 0
}

// CloneSetLinkProperties_RequestSlice clones src to dst by calling Clone for each element in
// src. Panics if len(dst) < len(src).
func CloneSetLinkProperties_RequestSlice(dst, src []SetLinkProperties_Request) {
	for i := range src {
		dst[i] = *src[i].Clone()
	}
}

// Modifying this variable is undefined behavior.
var SetLinkProperties_RequestTypeSupport types.MessageTypeSupport = _SetLinkProperties_RequestTypeSupport{}

type _SetLinkProperties_RequestTypeSupport struct{}

func (t _SetLinkProperties_RequestTypeSupport) New() types.Message {
	return NewSetLinkProperties_Request()
}

func (t _SetLinkProperties_RequestTypeSupport) PrepareMemory() unsafe.Pointer { //returns *C.gazebo_msgs__srv__SetLinkProperties_Request
	return (unsafe.Pointer)(C.gazebo_msgs__srv__SetLinkProperties_Request__create())
}

func (t _SetLinkProperties_RequestTypeSupport) ReleaseMemory(pointer_to_free unsafe.Pointer) {
	C.gazebo_msgs__srv__SetLinkProperties_Request__destroy((*C.gazebo_msgs__srv__SetLinkProperties_Request)(pointer_to_free))
}

func (t _SetLinkProperties_RequestTypeSupport) AsCStruct(dst unsafe.Pointer, msg types.Message) {
	m := msg.(*SetLinkProperties_Request)
	mem := (*C.gazebo_msgs__srv__SetLinkProperties_Request)(dst)
	primitives.StringAsCStruct(unsafe.Pointer(&mem.link_name), m.LinkName)
	geometry_msgs_msg.PoseTypeSupport.AsCStruct(unsafe.Pointer(&mem.com), &m.Com)
	mem.gravity_mode = C.bool(m.GravityMode)
	mem.mass = C.double(m.Mass)
	mem.ixx = C.double(m.Ixx)
	mem.ixy = C.double(m.Ixy)
	mem.ixz = C.double(m.Ixz)
	mem.iyy = C.double(m.Iyy)
	mem.iyz = C.double(m.Iyz)
	mem.izz = C.double(m.Izz)
}

func (t _SetLinkProperties_RequestTypeSupport) AsGoStruct(msg types.Message, ros2_message_buffer unsafe.Pointer) {
	m := msg.(*SetLinkProperties_Request)
	mem := (*C.gazebo_msgs__srv__SetLinkProperties_Request)(ros2_message_buffer)
	primitives.StringAsGoStruct(&m.LinkName, unsafe.Pointer(&mem.link_name))
	geometry_msgs_msg.PoseTypeSupport.AsGoStruct(&m.Com, unsafe.Pointer(&mem.com))
	m.GravityMode = bool(mem.gravity_mode)
	m.Mass = float64(mem.mass)
	m.Ixx = float64(mem.ixx)
	m.Ixy = float64(mem.ixy)
	m.Ixz = float64(mem.ixz)
	m.Iyy = float64(mem.iyy)
	m.Iyz = float64(mem.iyz)
	m.Izz = float64(mem.izz)
}

func (t _SetLinkProperties_RequestTypeSupport) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_message_type_support_handle__gazebo_msgs__srv__SetLinkProperties_Request())
}

type CSetLinkProperties_Request = C.gazebo_msgs__srv__SetLinkProperties_Request
type CSetLinkProperties_Request__Sequence = C.gazebo_msgs__srv__SetLinkProperties_Request__Sequence

func SetLinkProperties_Request__Sequence_to_Go(goSlice *[]SetLinkProperties_Request, cSlice CSetLinkProperties_Request__Sequence) {
	if cSlice.size == 0 {
		return
	}
	*goSlice = make([]SetLinkProperties_Request, int64(cSlice.size))
	for i := 0; i < int(cSlice.size); i++ {
		cIdx := (*C.gazebo_msgs__srv__SetLinkProperties_Request__Sequence)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_gazebo_msgs__srv__SetLinkProperties_Request * uintptr(i)),
		))
		SetLinkProperties_RequestTypeSupport.AsGoStruct(&(*goSlice)[i], unsafe.Pointer(cIdx))
	}
}
func SetLinkProperties_Request__Sequence_to_C(cSlice *CSetLinkProperties_Request__Sequence, goSlice []SetLinkProperties_Request) {
	if len(goSlice) == 0 {
		return
	}
	cSlice.data = (*C.gazebo_msgs__srv__SetLinkProperties_Request)(C.malloc((C.size_t)(C.sizeof_struct_gazebo_msgs__srv__SetLinkProperties_Request * uintptr(len(goSlice)))))
	cSlice.capacity = C.size_t(len(goSlice))
	cSlice.size = cSlice.capacity

	for i, v := range goSlice {
		cIdx := (*C.gazebo_msgs__srv__SetLinkProperties_Request)(unsafe.Pointer(
			uintptr(unsafe.Pointer(cSlice.data)) + (C.sizeof_struct_gazebo_msgs__srv__SetLinkProperties_Request * uintptr(i)),
		))
		SetLinkProperties_RequestTypeSupport.AsCStruct(unsafe.Pointer(cIdx), &v)
	}
}
func SetLinkProperties_Request__Array_to_Go(goSlice []SetLinkProperties_Request, cSlice []CSetLinkProperties_Request) {
	for i := 0; i < len(cSlice); i++ {
		SetLinkProperties_RequestTypeSupport.AsGoStruct(&goSlice[i], unsafe.Pointer(&cSlice[i]))
	}
}
func SetLinkProperties_Request__Array_to_C(cSlice []CSetLinkProperties_Request, goSlice []SetLinkProperties_Request) {
	for i := 0; i < len(goSlice); i++ {
		SetLinkProperties_RequestTypeSupport.AsCStruct(unsafe.Pointer(&cSlice[i]), &goSlice[i])
	}
}
